"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NoticeService_1 = require("../../services/NoticeService");
Page({
    data: {
        notices: [],
        pageNum: 1,
        pageSize: 10,
        totalPage: 0,
        totalCount: 0
    },
    onLoad: function () {
        this.loadNotice(1, 10);
    },
    noticeService: new NoticeService_1.NoticeService(),
    navToDetails: function (event) {
        var path = event.currentTarget.dataset.path;
        console.log(path);
        wx.navigateTo({
            url: "./notice-detail?path=" + path
        });
    },
    prevPage: function () {
        this.loadNotice(--this.data.pageNum, this.data.pageSize);
    },
    nextPage: function () {
        this.loadNotice(++this.data.pageNum, this.data.pageSize);
    },
    loadNotice: function (pageNum, pageSize) {
        if (pageNum === void 0) { pageNum = 1; }
        if (pageSize === void 0) { pageSize = 10; }
        var _this = this;
        wx.showLoading({
            title: "loading..."
        });
        this.noticeService.Get(function (result) {
            _this.setData({
                notices: result.Data,
                pageNum: result.PageNumber,
                pageSize: result.PageSize,
                totalPage: result.PageCount,
                totalCount: result.TotalCount
            });
        }, {
            PageNumber: pageNum,
            pageSize: pageSize
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibm90aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0EsOERBQTZEO0FBRTdELElBQUksQ0FBQztJQUNILElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxFQUFtQjtRQUM1QixPQUFPLEVBQUUsQ0FBQztRQUNWLFFBQVEsRUFBRSxFQUFFO1FBQ1osU0FBUyxFQUFFLENBQUM7UUFDWixVQUFVLEVBQUUsQ0FBQztLQUNkO0lBQ0QsTUFBTTtRQUNKLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFDRCxhQUFhLEVBQUUsSUFBSSw2QkFBYSxFQUFFO0lBQ2xDLFlBQVksRUFBWixVQUFhLEtBQVU7UUFDckIsSUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQzVDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEIsRUFBRSxDQUFDLFVBQVUsQ0FBQztZQUNaLEdBQUcsRUFBRSwwQkFBd0IsSUFBTTtTQUNwQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVELFVBQVUsRUFBVixVQUFXLE9BQWtCLEVBQUUsUUFBb0I7UUFBeEMsd0JBQUEsRUFBQSxXQUFrQjtRQUFFLHlCQUFBLEVBQUEsYUFBb0I7UUFDakQsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLEVBQUUsQ0FBQyxXQUFXLENBQUM7WUFDYixLQUFLLEVBQUUsWUFBWTtTQUNwQixDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxVQUFBLE1BQU07WUFDbkIsS0FBTSxDQUFDLE9BQU8sQ0FBQztnQkFDbkIsT0FBTyxFQUFFLE1BQU0sQ0FBQyxJQUFJO2dCQUNwQixPQUFPLEVBQUUsTUFBTSxDQUFDLFVBQVU7Z0JBQzFCLFFBQVEsRUFBRSxNQUFNLENBQUMsUUFBUTtnQkFDekIsU0FBUyxFQUFFLE1BQU0sQ0FBQyxTQUFTO2dCQUMzQixVQUFVLEVBQUUsTUFBTSxDQUFDLFVBQVU7YUFDOUIsQ0FBQyxDQUFDO1FBQ1AsQ0FBQyxFQUFFO1lBQ0QsVUFBVSxFQUFDLE9BQU87WUFDbEIsUUFBUSxFQUFFLFFBQVE7U0FDbkIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5vdGljZSB9IGZyb20gJy4uLy4uL21vZGVscy9Ob3RpY2UnO1xyXG5pbXBvcnQgeyBQYWdlZExpc3REYXRhIH0gZnJvbSAnLi4vLi4vbW9kZWxzL1BhZ2VkTGlzdERhdGEnO1xyXG5pbXBvcnQgeyBmb3JtYXRUaW1lIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XHJcbmltcG9ydCB7IE5vdGljZVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9Ob3RpY2VTZXJ2aWNlJztcclxuXHJcblBhZ2Uoe1xyXG4gIGRhdGE6IHtcclxuICAgIG5vdGljZXM6IFtdIGFzIEFycmF5PE5vdGljZT4sXHJcbiAgICBwYWdlTnVtOiAxLFxyXG4gICAgcGFnZVNpemU6IDEwLFxyXG4gICAgdG90YWxQYWdlOiAwLFxyXG4gICAgdG90YWxDb3VudDogMCAgICBcclxuICB9LFxyXG4gIG9uTG9hZCgpIHtcclxuICAgIHRoaXMubG9hZE5vdGljZSgxLCAxMCk7XHJcbiAgfSxcclxuICBub3RpY2VTZXJ2aWNlOiBuZXcgTm90aWNlU2VydmljZSgpLFxyXG4gIG5hdlRvRGV0YWlscyhldmVudDogYW55KSB7XHJcbiAgICBsZXQgcGF0aCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuZGF0YXNldC5wYXRoO1xyXG4gICAgY29uc29sZS5sb2cocGF0aCk7XHJcbiAgICB3eC5uYXZpZ2F0ZVRvKHtcclxuICAgICAgdXJsOiBgLi9ub3RpY2UtZGV0YWlsP3BhdGg9JHtwYXRofWBcclxuICAgIH0pO1xyXG4gIH0sXHJcblxyXG4gIHByZXZQYWdlKCkge1xyXG4gICAgdGhpcy5sb2FkTm90aWNlKC0tdGhpcy5kYXRhLnBhZ2VOdW0sIHRoaXMuZGF0YS5wYWdlU2l6ZSk7XHJcbiAgfSxcclxuXHJcbiAgbmV4dFBhZ2UoKSB7XHJcbiAgICB0aGlzLmxvYWROb3RpY2UoKyt0aGlzLmRhdGEucGFnZU51bSwgdGhpcy5kYXRhLnBhZ2VTaXplKTtcclxuICB9LFxyXG5cclxuICBsb2FkTm90aWNlKHBhZ2VOdW06bnVtYmVyID0gMSwgcGFnZVNpemU6bnVtYmVyID0gMTApIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcbiAgICB3eC5zaG93TG9hZGluZyh7XHJcbiAgICAgIHRpdGxlOiBcImxvYWRpbmcuLi5cIlxyXG4gICAgfSk7XHJcbiAgICB0aGlzLm5vdGljZVNlcnZpY2UuR2V0KHJlc3VsdCA9PiB7XHJcbiAgICAgICAgKDxhbnk+X3RoaXMpLnNldERhdGEoe1xyXG4gICAgICAgICAgbm90aWNlczogcmVzdWx0LkRhdGEsXHJcbiAgICAgICAgICBwYWdlTnVtOiByZXN1bHQuUGFnZU51bWJlcixcclxuICAgICAgICAgIHBhZ2VTaXplOiByZXN1bHQuUGFnZVNpemUsXHJcbiAgICAgICAgICB0b3RhbFBhZ2U6IHJlc3VsdC5QYWdlQ291bnQsXHJcbiAgICAgICAgICB0b3RhbENvdW50OiByZXN1bHQuVG90YWxDb3VudFxyXG4gICAgICAgIH0pO1xyXG4gICAgfSwge1xyXG4gICAgICBQYWdlTnVtYmVyOnBhZ2VOdW0sXHJcbiAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZVxyXG4gICAgfSk7ICAgIFxyXG4gIH1cclxufSlcclxuIl19