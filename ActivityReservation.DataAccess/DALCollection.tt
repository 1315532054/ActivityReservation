<#@ template  debug="false" hostSpecific="true" language="C#" #>
<#@ output extension=".generated.cs" encoding="utf-8" #>
<#@ Assembly Name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#
	string[] types = {
		"User",
		"BlockType",
		"BlockEntity",
		"OperationLog",
		"Reservation",
		"ReservationPlace",
        "ReservationPeriod",
		"SystemSettings",
		"Notice",
        "DisabledPeriod"
	};
#>
using Autofac;
using Models;
namespace DataAccess
{
<# 
	foreach (var item in types)
    {
#>
	public partial interface IDAL<#= item #>: IBaseDAL<<#= item #>> { }

	public partial class DAL<#= item #>: BaseDAL<<#= item #>>,IDAL<#= item #> { }
	
<#		 
    } 
#>

    // DataAccessModule
    public class DataAccessModule : Module
    {
        protected override void Load(ContainerBuilder builder)
        {
<# 
            foreach (var item in types)
            {
#>
                builder.RegisterType<DAL<#= item #>>().As<IDAL<#= item #>>();
<#		 
            }
#>
        }
    }
}
