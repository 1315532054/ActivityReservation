<#@ template  debug="false" hostSpecific="true" language="C#" #>
<#@ output extension=".generated.cs" encoding="utf-8" #>
<#@ Assembly Name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#
	string[] types = {
		"User",
		"BlockType",
		"BlockEntity",
		"OperationLog",
		"Reservation",
		"ReservationPlace",
        "ReservationPeriod",
		"SystemSettings",
		"Notice",
        "DisabledPeriod"
	};
#>
using ActivityReservation.DataAccess;
using ActivityReservation.Models;
using Microsoft.Extensions.DependencyInjection;
using WeihanLi.Common;

namespace ActivityReservation.DataAccess
{
<# 
	foreach (var item in types)
    {
#>
	public partial interface IDAL<#= item #>: IBaseDAL<<#= item #>> { }

	public partial class DAL<#= item #>: BaseDAL<<#= item #>>,IDAL<#= item #> { 

        public DAL<#= item #>(ReservationDbContext dbContext):base(dbContext)
        {
        }
}
	
<#		 
    } 
#>

    
    public static class DataAccessExtensions
    {
        public static IServiceCollection AddDAL(this IServiceCollection services)
        {
<# 
            foreach (var item in types)
            {
#>
                services.AddScoped<IDAL<#= item #>, DAL<#= item #>>();
<#		 
            }
#>
            return services;
        }
    }

}
