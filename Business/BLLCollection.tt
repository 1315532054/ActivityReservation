<#@ template  debug="false" hostSpecific="true" language="C#" #>
<#@ output extension=".generated.cs" encoding="utf-8" #>
<#@ Assembly Name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#
	string[] types = {
		"User",
		"BlockType",
		"BlockEntity",
		"OperationLog",
		"Reservation",
		"ReservationPlace",
		"SystemSettings",
		"Notice",
        "DisabledPeriod"
	};
#>
using Autofac;
using DataAccess;
using Models;
using WeihanLi.Common;

namespace Business
{
<# 
	foreach (var item in types)
    {
#>
	public partial interface IBLL<#= item #>:IBaseBLL<<#= item #>>{}

	public partial class BLL<#= item #> : BaseBLL<<#= item #>>,  IBLL<#= item #>
    {
        protected override void InitDbHandler()
        {
            dbHandler = DependencyResolver.Current.GetService<IDAL<#= item #>>();
        }
    }
<#		 
    } 
#>

    public class BusinessModule : Autofac.Module
    {
        protected override void Load(ContainerBuilder builder)
        {
<# 
            foreach (var item in types)
            {
#>
                builder.RegisterType<BLL<#= item #>>().As<IBLL<#= item #>>();
<#		 
            }
#>
        }
    }
}
